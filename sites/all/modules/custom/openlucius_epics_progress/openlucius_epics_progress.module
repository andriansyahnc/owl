<?php
/**
 * @file
 * Code for the Openlucius epics progress feature.
 */

include_once 'openlucius_epics_progress.features.inc';
include_once 'includes/openlucius_epics_progress.func.inc';

define('OPENLUCIUS_EPICS_PROGRESS_EPIC_STATUS_VOCABULARY_NAME', 'epic_state');

/**
* Implements hook_menu().
*/
function openlucius_epics_progress_menu() {
  $items = array();
  $items['admin/config/openlucius/ol-to-do-list-status'] = array(
    'title'            => 'Epic status',
    'description'      => 'Configure epic statuses.',
    'file'             => 'epics.forms.inc',
    'file path'        => drupal_get_path('module', 'openlucius_epics_progress') . '/includes',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('openlucius_epic_progress_ol_to_do_list_status_settings_form'),
    'access arguments' => array('administer openlucius configuration'),
    'type'             => MENU_LOCAL_TASK,
    'tab_parent'       => 'admin/config/openlucius',
  );
  
  return $items;
}

/**
* Implements hook_menu_alter().
*/
function openlucius_epics_progress_menu_alter(&$items) {
  $items['admin/config/openlucius/task-status']['file path'] = drupal_get_path('module', 'openlucius_epics_progress') . '/includes';
  $items['admin/config/openlucius/task-status']['page arguments'] = array('openlucius_epics_progress_todo_status_settings_form');
  $items['admin/config/openlucius/task-status']['module'] = 'openlucius_epics_progress';
}

/**
* Implements hook_form_FORM_ID_alter().
*/
function openlucius_epics_progress_form_ol_todo_list_node_form_alter(&$form, &$form_state, $form_id) {
  if(isset($form['field_todo_list_status'])) {
    $form['field_todo_list_status']['#access'] = FALSE;
  }
  $shared_group = $form['field_shared_group_reference'][LANGUAGE_NONE]['#default_value'];
  $option_views = views_get_view_result('vw_milestone_get_property_from_group', 'master', $shared_group);
  $options = array();

  foreach($option_views as $option_view) {
    $options[$option_view->nid] = $option_view->node_title;
  }
  
  $form['field_milestone'][LANGUAGE_NONE]['#options'] = array('_none' => t('- Select a value -')) + $options;
}

/**
* Implements hook_form_FORM_ID_alter().
*/
function openlucius_epics_progress_form_openlucius_core_taxonomy_term_edit_alter(&$form, &$form_state, $form_id) {
  $form['#submit'][] = 'openlucius_epics_progress_taxonomy_term_edit_submit';
}

/**
* Implements hook_form_FORM_ID_alter().
*/
function openlucius_epics_progress_form_openlucius_core_taxonomy_term_delete_alter(&$form, &$form_state, $form_id) {
  $term_machine = $form_state['build_info']['args'][0]->vocabulary_machine_name;
  if($term_machine == OPENLUCIUS_EPICS_PROGRESS_EPIC_STATUS_VOCABULARY_NAME) {
    $form_state['redirect'] = 'admin/config/openlucius/ol-to-do-list-status';
    $form['#submit'] = array('openlucius_epics_progress_taxonomy_term_delete_submit');
  }
}

function openlucius_epics_progress_theme() {
  $items = array(
    'openlucius_epics_progress_todo_status_settings_form' => array(
      'render element' => 'element',
    ),
    'openlucius_epic_progress_ol_to_do_list_status_settings_form' => array(
      'render element' => 'element',
    ),
  );
  return $items;
}

/**
* Implements hook_node_update().
*/
function openlucius_epics_progress_node_update($node) {
  if($node->type == 'ol_todo') {
    $epic_start = variable_get('openlucius_epics_progress_epic_start_todo_state', '');
    $epic_stop = variable_get('openlucius_epics_progress_epic_close_todo_state', '');
    
    $enode = entity_metadata_wrapper('node', $node);

    $epic_nid = get_property($enode, 'field_todo_list_reference', 'nid');

    if($epic_nid !== NULL) {
      $views_count_all = views_get_view_result('vw_epic_get_story_property', 'master', $epic_nid);
      $count_all = $views_count_all[0]->field_todo_list_reference_node_nid;
      
      $views_count_start = views_get_view_result('vw_epic_get_story_property', 'master', $epic_nid, $epic_start);
      $count_start = $views_count_start[0]->field_todo_list_reference_node_nid;
      
      $views_count_complete = views_get_view_result('vw_epic_get_story_property', 'master', $epic_nid, $epic_stop);
      $count_stop = $views_count_complete[0]->field_todo_list_reference_node_nid;
      
      $epic = entity_metadata_wrapper('node', $epic_nid);
      
      if($count_all === $count_start) {
        $epic_state = variable_get('epic_start_state', '');
        $epic->field_todo_list_status->set($epic_state);
        $epic->save();
      } 
      else if($count_all === $count_stop) {
        $epic_state = variable_get('epic_close_state', '');
        $epic->field_todo_list_status->set($epic_state);
        $epic->save();
      }
      else {
        $epic_state = variable_get('epic_in_progress_state', '');
        $epic->field_todo_list_status->set($epic_state);
        $epic->save();
      }
    }
  }
}


/**
 * Implements hook_openlucius_core_editable_vocabularies_alter().
 */
function openlucius_epics_progress_openlucius_core_editable_vocabularies_alter(&$editable_vocabularies) {
  $editable_vocabularies[] = OPENLUCIUS_EPICS_PROGRESS_EPIC_STATUS_VOCABULARY_NAME;
}

function openlucius_epics_progress_openlucius_core_deletable_vocabularies_alter(&$editable_vocabularies) {
  $editable_vocabularies[] = OPENLUCIUS_EPICS_PROGRESS_EPIC_STATUS_VOCABULARY_NAME;
}

function openlucius_epics_progress_openlucius_core_config_places_alter(&$places) {
  $places[] = 'admin/config/openlucius/ol-to-do-list-status';
}